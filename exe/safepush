#! /usr/bin/sh

RED='\033[0;31m'
GREEN='\033[0;32m'
NORMAL='\033[0m'

function ppush ()
{
  prontorunlight
  pushandpr
}


function ppushtest ()
{
  test-or-create
  prontorun
  pushandpr
}

function prontotest ()
{
  test-or-create
  prontorun
}

function pushandpr ()
{
  if [ $? == 1 ]; then
    return 1
  fi

  print '##########################'
  print "## Pushing to Github... ##"
  print '##########################'
  git push origin

  if [ $? == 128 ]; then
    print "${GREEN}Syncing with github...${NORMAL}"

    git push --set-upstream origin $(git rev-parse --symbolic-full-name --abbrev-ref HEAD)

    if [ $? == 0 ]; then
      open "https://github.com/KissKissBankBank/kisskissbankbank/pull/new/$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)"
    fi
  fi
}

function prontorunlight ()
{
  print '#######################'
  print "## Running pronto... ##"
  print '#######################'

  be pronto run --exit-code

  if [ $? != 0 ]; then
    print "${RED}Pronto found somme errors... Fix them before pushing to master!${NORMAL}"
    return 1
  else
    print "${GREEN}No errors found by pronto, go for next step!${NORMAL}"
  fi
}

function prontorun ()
{
  if [ $? == 1 ]; then
    return 1
  fi

  print '#######################'
  print "## Running pronto... ##"
  print '#######################'

  be pronto run --exit-code

  if [ $? != 0 ]; then
    print "${RED}Pronto found somme errors... Fix them before pushing to master!${NORMAL}"
    return 1
  else
    print "${GREEN}No errors found by pronto, go for next step!${NORMAL}"
  fi
}

function spec-or-create ()
{
  if [ $? == 1 ]; then
    return 1
  fi

  print '##########################'
  print '## Testing new files... ##'
  print '##########################'
  ruby ~/Developer/dotfiles/rspecer.rb

  if [ $? == 1 ]; then
    print "${RED}Oops, a spec seems to be red or empty, be sure to complete it before you push${NORMAL}"
    return 1
  else
    print "${GREEN}Every spec operational, passing to the next step!${NORMAL}"
  fi
}

function test-or-create ()
{
  print '##########################'
  print "## Testing new files... ##"
  print '##########################'

  ruby ~/Developer/dotfiles/rspecer.rb

  if [ $? == 1 ]; then
    print "${RED}Oops, a spec seems to be red or empty, be sure to complete it before you push${NORMAL}"
    return 1
  else
    print "${GREEN}Every spec operational, passing to the next step!${NORMAL}"
  fi
}
